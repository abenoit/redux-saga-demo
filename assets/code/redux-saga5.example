// src/index.js
import createSagaMiddleware from 'redux-saga'
import rootSaga from './sagas';

const sagaMiddleware = createSagaMiddleware();
sagaMiddleware.run(rootSaga);

ReactDOM.render(
  <Provider store={store}>
    <App />
  </Provider>,
  root
);

// src/sagas/index.js
export default function* rootSaga() {
  // Watchers
  yield all([
    fork(watchFetchProducts),
    fork(watchFecthOrders),
    fork(watchI18n),
    ...
  ])
}

// src/sagas/products
export default function* watchFetchProducts() {
  yield takeLatest('PRODUCTS_REQUESTED', fetchProducts);
}

export function* fetchProducts() {
  const token = yield select(getToken);
  const { response, error } = yield call(Api.fetch, '/products', token)
  if (!error) {
    yield put({ 
      type: 'PRODUCTS_REQUESTED_SUCCESS', response.data.products 
    })
  } else {
    yield put({ type: 'PRODUCTS_REQUESTED_FAILURE', error })
  }
}